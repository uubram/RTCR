# Change Log
## [0.5.2] 2023-09-10
### Fixed
- setup.py, running 'python setup.py develop' no longer results in
"ValueError: 'editdistance/bycython.pyx' doesn't match any files" by setting
editdistance version to be 0.3.1 (version 0.6.2 gave the ValueError).
- fileio.py, IMGTAlleleContainerFormat can read IMGT reference fasta.
- convert.py, removed unreachable code
## [0.5.1] 2021-02-28
### Added
- umi_group_ec.py and checkout.py show default values for their arguments,
including when they are called using 'rtcr umi_group_ec -h' or
'rtcr Checkout -h'
## [0.5.0] 2020-09-04
### Changed
- pipeline.py and convert.py, output clones in AIRR format
### Added
- config.ini, 'output_not_ok_fn' option specifying the filename for clones
that are discarded by the post-processing after error correction
- docs/README.md, "results.tsv" section explaining the new output format,
including custom fields that are not specified by the AIRR format.
"Analysing RTCR output with immunarch R package" section.
### Removed
- config.ini, 'include_cysphe', 'output_hdr', and 'output_fmt' options
- tcR_RTCR_parser.R, because it cannot parse RTCR output which is now in
AIRR format
- docs/README.md, "Analyzing RTCR output with tcR R package" section.
### Fixed
- docs/README.md, barcode example "Quick start" section works with current
version of RTCR
## [0.4.6]
### Fixed
- checkout.py, when searching both orientations for master also both
orientations are searched for the slave.
- checkout.py, slave UMI is properly retrieved when the slave is found on the
reverse complement of a read.
## [0.4.5]
### Added
- barcode.py, IUPAC DNA codes allowed in non-seed part of the adapter.
### Fixed
- checkout.py, reported number of records processed matches actual number of
records processed.
- checkout.py, handle adapters that have the same master but different slave
sequences.
## [0.4.4]
### Fixed
- setup.py, drop reference to non-existant README.rst, include docs/README.md
## [0.4.3]
### Added
- known issue to README.rst about the pipeline exiting with a
"Error in worker pool" message in case of low memory (on linux the result of
the OOM killer taking out a child process of the pipeline).
- docs/_config.yml for loading github-pages minimal theme and add download
buttons to the page.
### Changed
- Converted README.rst to README.md and placed it in /docs folder for use with
github-pages. Thanks to Gijs Schroder (user seigenrocks on github) for helping
to get github pages working again for RTCR.
### Fixed
- pipeline exits when child process dies instead of waiting indefinitely for
results (same 'fix' in version 0.4.0 made pipeline report a child died, but
neglected to make the pipeline exit)
- "--debug" option of "rtcr run" sets debug level on root logger so that
loggers in the other modules are also using the debug level
- "--verbose" option of "rtcr run" command adds StreamHandler to root logger
so that loggers in the other modules are also using this handler.
## [0.4.2]
### Fixed
- Corrected example command to "Checkout" unassembled reads.
## [0.4.1]
### Fixed
- README.rst, indentation of enumeration in installation section. Removed
superfluous bowtie2 reference at the end. Replaced RTCR hyperlink target at
the end with an in place "RTCR package" hyperlink (fixes "Duplicate implicit
target name" message from rstcheck program).
## [0.4.0]
### Added
- filter to umi_group_ec. Reads that are too dissimilar to an existing
consensus sequence with the same UMI, are discarded if their score (from
get_offset method) is less than "min_score4merge".
- progress indicator for umi_group_ec.
- progress indicator for QMerge&IMerge, and NMerge
- "output_hdr" and "output_fmt" options to config.ini for customization of the
way clones are output to text (currently ".tsv") files.
- "rtcr Convert" option. Converts pickled clonesets (.dat files) to text
(.tsv files).
### Fixed
- Pipeline exits when child process dies (instead of waiting indefinitely for
results).
- config.ini, by default thread name is included in log messages
- test_RTCR.py tests the run_umi_group_ec method.
- UMI record format is now "UMI:XXX:YYY:ZZZ" where XXX is the qualifier (e.g.
"R1"), and YYY and ZZZ are the UMI nt sequence and ascii encoded (Phred+33)
base quality scores. This fixes an issue as the base quality string (here the
ZZZ part) contains the delimiter (":", i.e. Phred 25).
- align.py minimally assigns one thread to the V and J alignment processes, so
running RTCR with number of threads set to one ('-t 1' option) no longer
causes a broken pipe ("IOError: [Errno 32] Broken pipe"), which happened
because the J-alignment process would be given 0 threads to work with in
align.py.
- trie.py now removes nodes in Trie.__delitem__ function  without throwing
AttributeError when trying to access the node.isset attribute (added
Node.clear() function which itself resets the Node._isset attribute).
- Update author email in setup.py to gmail account
- Requirement of python 2.7+ in setup.py (python_require option)
## [0.3.2]
### Added
- Change log
- command line arguments (sys.argv) in pipeline log output (rtcr.log)
### Changed
- Checkout can handle three file inputs with forward, reverse, or merged
reads. Output will be "_R1.fastq" and "_R2.fastq" for master and slave
containing reads in the case of forward and reverse fastq files. Output will be
"_R12.fastq" for merged read pairs.
- Checkout adds a qualifier ("R1", "R2", or "R12") to each UMI
- umi_group_ec handles UMI qualifiers for separating out forward, reverse,
and merged read pairs.
### Fixed
- Checkout now reports "100%" when it has finished processing all
the reads.
- Pipeline responds to CTRL-C
- Suppresses 'No handlers could be found for logger' message when using rtcr
libraries without configuring a logger.
- build_clone method in clone.py no longer accepts 0 length junction nt seqs,
this prevents "ValueError: len(seq) < 1" from ConsensusQSequence (in cseq.c)
- Outputs warning to log when no germline mismatches are found, instead of
causing 'float division by zero'.
- align.py now uses unique identifiers to keep track of the reads, separate
from the read names. This prevents from potentially pasting different reads
together when read names in a fastq file are not unique. This includes the
case where read names are not unique before the first space (as bowtie2 drops
everything after the first space).
